"use strict";(self.webpackChunkrojo_space=self.webpackChunkrojo_space||[]).push([[7012],{6776:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var o=n(7462),a=(n(7294),n(3905));n(8209);const r={title:"Upgrading From Rojo 6"},i=void 0,s={unversionedId:"upgrade",id:"upgrade",title:"Upgrading From Rojo 6",description:"While Rojo 7 is mostly backwards compatible with Rojo 6, it has a couple important breaking changes to be aware of.",source:"@site/docs/upgrade.md",sourceDirName:".",slug:"/upgrade",permalink:"/docs/v7/upgrade",draft:!1,editUrl:"https://github.com/rojo-rbx/rojo.space/edit/master/docs/upgrade.md",tags:[],version:"current",frontMatter:{title:"Upgrading From Rojo 6"},sidebar:"defaultSidebar",previous:{title:"Rojo Alternatives",permalink:"/docs/v7/rojo-alternatives"}},l={},p=[{value:"Explicit Properties in Project/Meta Files",id:"explicit-properties-in-projectmeta-files",level:2}],d={toc:p},m="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"While Rojo 7 is mostly backwards compatible with Rojo 6, it has a couple important breaking changes to be aware of."),(0,a.kt)("h2",{id:"explicit-properties-in-projectmeta-files"},"Explicit Properties in Project/Meta Files"),(0,a.kt)("p",null,"Rojo has support for specifying properties in project files as well as ",(0,a.kt)("inlineCode",{parentName:"p"},".meta.json")," files. There are two ways to write properties in these files, the explicit syntax and implicit syntax."),(0,a.kt)("p",null,"Rojo's ",(0,a.kt)("strong",{parentName:"p"},"implicit syntax")," has not changed. In Both Rojo 6 and 7, you can write properties like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "cool-skateboard",\n    "tree": {\n        "$className": "Part",\n        "$properties": {\n            "Material": "Wood",\n            "Size": [2, 0.5, 6],\n            "Color": [1, 0, 0],\n            "CFrame": [\n                0, 10, 0,\n                1, 0, 0,\n                0, 1, 0,\n                0, 0, 1\n            ]\n        }\n    }\n}\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"It's strongly recommended to use the implicit syntax when possible! It's shorter, easier to read, and more future-proof.")),(0,a.kt)("p",null,"Rojo also has a more ",(0,a.kt)("strong",{parentName:"p"},"explicit syntax")," for specifying property values. This syntax should be used only for a couple reasons:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Using an new enum value that Rojo doesn't know about."),(0,a.kt)("li",{parentName:"ul"},"Writing a property with a different value type than what Rojo expects.")),(0,a.kt)("p",null,"In Rojo 6, this same model using the ",(0,a.kt)("strong",{parentName:"p"},"explicit property syntax")," would look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "cool-skateboard",\n    "tree": {\n        "$className": "Part",\n        "$properties": {\n            "Material": {\n                "Type": "Enum",\n                "Value": 512\n            },\n            "Size": {\n                "Type": "Vector3",\n                "Value": [2, 0.5, 6]\n            },\n            "Color": {\n                "Type": "Color3",\n                "Value": [1, 0, 0]\n            },\n            "CFrame": {\n                "Type": "CFrame", \n                "Value": [\n                    0, 10, 0,\n                    1, 0, 0,\n                    0, 1, 0,\n                    0, 0, 1\n                ]\n            }\n        }\n    }\n}\n')),(0,a.kt)("p",null,"This format has changed in Rojo 7. The same model with Rojo 7's explicit property syntax would look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "cool-skateboard",\n    "tree": {\n        "$className": "Part",\n        "$properties": {\n            "Material": {\n                "Enum": 512\n            },\n            "Size": {\n                "Vector3": [2, 0.5, 6]\n            },\n            "Color": {\n                "Color3": [1, 0, 0]\n            },\n            "CFrame": {\n                "CFrame": {\n                    "position": [0, 10, 0],\n                    "orientation": [\n                        1, 0, 0,\n                        0, 1, 0,\n                        0, 0, 1\n                    ]\n                }\n            }\n        }\n    }\n}\n')),(0,a.kt)("p",null,"In Rojo 7, the ",(0,a.kt)("inlineCode",{parentName:"p"},"Type")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Value")," fields were folded together to reduce the amount of typing. Some types like ",(0,a.kt)("inlineCode",{parentName:"p"},"CFrame")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"ColorSequence")," had fields added or renamed."),(0,a.kt)("p",null,"Since the release of Rojo 6, it has been feasible to use ",(0,a.kt)("inlineCode",{parentName:"p"},"rbxm")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"rbxmx")," files for models instead of typing properties by hand. For more complicated models, this is recommended."))}c.isMDXComponent=!0}}]);