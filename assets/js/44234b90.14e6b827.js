"use strict";(self.webpackChunkrojo_space=self.webpackChunkrojo_space||[]).push([[7012],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},16776:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const a={title:"Upgrading From Rojo 6"},i=void 0,l={unversionedId:"upgrade",id:"upgrade",title:"Upgrading From Rojo 6",description:"While Rojo 7 is mostly backwards compatible with Rojo 6, it has a couple important breaking changes to be aware of.",source:"@site/docs/upgrade.md",sourceDirName:".",slug:"/upgrade",permalink:"/docs/v7/upgrade",draft:!1,editUrl:"https://github.com/rojo-rbx/rojo.space/edit/master/docs/upgrade.md",tags:[],version:"current",frontMatter:{title:"Upgrading From Rojo 6"},sidebar:"defaultSidebar",previous:{title:"Rojo Alternatives",permalink:"/docs/v7/rojo-alternatives"}},p={},s=[{value:"Explicit Properties in Project/Meta Files",id:"explicit-properties-in-projectmeta-files",level:2}],c={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"While Rojo 7 is mostly backwards compatible with Rojo 6, it has a couple important breaking changes to be aware of."),(0,o.kt)("h2",{id:"explicit-properties-in-projectmeta-files"},"Explicit Properties in Project/Meta Files"),(0,o.kt)("p",null,"Rojo has support for specifying properties in project files as well as ",(0,o.kt)("inlineCode",{parentName:"p"},".meta.json")," files. There are two ways to write properties in these files, the explicit syntax and implicit syntax."),(0,o.kt)("p",null,"Rojo's ",(0,o.kt)("strong",{parentName:"p"},"implicit syntax")," has not changed. In Both Rojo 6 and 7, you can write properties like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "cool-skateboard",\n    "tree": {\n        "$className": "Part",\n        "$properties": {\n            "Material": "Wood",\n            "Size": [2, 0.5, 6],\n            "Color": [1, 0, 0],\n            "CFrame": [\n                0, 10, 0,\n                1, 0, 0,\n                0, 1, 0,\n                0, 0, 1\n            ]\n        }\n    }\n}\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"It's strongly recommended to use the implicit syntax when possible! It's shorter, easier to read, and more future-proof.")),(0,o.kt)("p",null,"Rojo also has a more ",(0,o.kt)("strong",{parentName:"p"},"explicit syntax")," for specifying property values. This syntax should be used only for a couple reasons:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Using an new enum value that Rojo doesn't know about."),(0,o.kt)("li",{parentName:"ul"},"Writing a property with a different value type than what Rojo expects.")),(0,o.kt)("p",null,"In Rojo 6, this same model using the ",(0,o.kt)("strong",{parentName:"p"},"explicit property syntax")," would look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "cool-skateboard",\n    "tree": {\n        "$className": "Part",\n        "$properties": {\n            "Material": {\n                "Type": "Enum",\n                "Value": 512\n            },\n            "Size": {\n                "Type": "Vector3",\n                "Value": [2, 0.5, 6]\n            },\n            "Color": {\n                "Type": "Color3",\n                "Value": [1, 0, 0]\n            },\n            "CFrame": {\n                "Type": "CFrame", \n                "Value": [\n                    0, 10, 0,\n                    1, 0, 0,\n                    0, 1, 0,\n                    0, 0, 1\n                ]\n            }\n        }\n    }\n}\n')),(0,o.kt)("p",null,"This format has changed in Rojo 7. The same model with Rojo 7's explicit property syntax would look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "cool-skateboard",\n    "tree": {\n        "$className": "Part",\n        "$properties": {\n            "Material": {\n                "Enum": 512\n            },\n            "Size": {\n                "Vector3": [2, 0.5, 6]\n            },\n            "Color": {\n                "Color3": [1, 0, 0]\n            },\n            "CFrame": {\n                "CFrame": {\n                    "position": [0, 10, 0],\n                    "orientation": [\n                        1, 0, 0,\n                        0, 1, 0,\n                        0, 0, 1\n                    ]\n                }\n            }\n        }\n    }\n}\n')),(0,o.kt)("p",null,"In Rojo 7, the ",(0,o.kt)("inlineCode",{parentName:"p"},"Type")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Value")," fields were folded together to reduce the amount of typing. Some types like ",(0,o.kt)("inlineCode",{parentName:"p"},"CFrame")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ColorSequence")," had fields added or renamed."),(0,o.kt)("p",null,"Since the release of Rojo 6, it has been feasible to use ",(0,o.kt)("inlineCode",{parentName:"p"},"rbxm")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"rbxmx")," files for models instead of typing properties by hand. For more complicated models, this is recommended."))}m.isMDXComponent=!0}}]);