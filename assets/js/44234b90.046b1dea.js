"use strict";(self.webpackChunkrojo_space=self.webpackChunkrojo_space||[]).push([[7012],{5532:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var o=n(5893),r=n(1151);const s={title:"Upgrading From Rojo 6"},i=void 0,a={id:"upgrade",title:"Upgrading From Rojo 6",description:"While Rojo 7 is mostly backwards compatible with Rojo 6, it has a couple important breaking changes to be aware of.",source:"@site/docs/upgrade.md",sourceDirName:".",slug:"/upgrade",permalink:"/docs/v7/upgrade",draft:!1,unlisted:!1,editUrl:"https://github.com/rojo-rbx/rojo.space/edit/master/docs/upgrade.md",tags:[],version:"current",frontMatter:{title:"Upgrading From Rojo 6"},sidebar:"defaultSidebar",previous:{title:"Rojo Alternatives",permalink:"/docs/v7/rojo-alternatives"}},l={},c=[{value:"Explicit Properties in Project/Meta Files",id:"explicit-properties-in-projectmeta-files",level:2}];function d(t){const e={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:"While Rojo 7 is mostly backwards compatible with Rojo 6, it has a couple important breaking changes to be aware of."}),"\n",(0,o.jsx)(e.h2,{id:"explicit-properties-in-projectmeta-files",children:"Explicit Properties in Project/Meta Files"}),"\n",(0,o.jsxs)(e.p,{children:["Rojo has support for specifying properties in project files as well as ",(0,o.jsx)(e.code,{children:".meta.json"})," files. There are two ways to write properties in these files, the explicit syntax and implicit syntax."]}),"\n",(0,o.jsxs)(e.p,{children:["Rojo's ",(0,o.jsx)(e.strong,{children:"implicit syntax"})," has not changed. In Both Rojo 6 and 7, you can write properties like this:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n\t"name": "cool-skateboard",\n\t"tree": {\n\t\t"$className": "Part",\n\t\t"$properties": {\n\t\t\t"Material": "Wood",\n\t\t\t"Size": [2, 0.5, 6],\n\t\t\t"Color": [1, 0, 0],\n\t\t\t"CFrame": [\n\t\t\t\t0, 10, 0,\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\t\t\t]\n\t\t}\n\t}\n}\n'})}),"\n",(0,o.jsx)(e.admonition,{type:"info",children:(0,o.jsx)(e.p,{children:"It's strongly recommended to use the implicit syntax when possible! It's shorter, easier to read, and more future-proof."})}),"\n",(0,o.jsxs)(e.p,{children:["Rojo also has a more ",(0,o.jsx)(e.strong,{children:"explicit syntax"})," for specifying property values. This syntax should be used only for a couple reasons:"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Using an new enum value that Rojo doesn't know about."}),"\n",(0,o.jsx)(e.li,{children:"Writing a property with a different value type than what Rojo expects."}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["In Rojo 6, this same model using the ",(0,o.jsx)(e.strong,{children:"explicit property syntax"})," would look like this:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n\t"name": "cool-skateboard",\n\t"tree": {\n\t\t"$className": "Part",\n\t\t"$properties": {\n\t\t\t"Material": {\n\t\t\t\t"Type": "Enum",\n\t\t\t\t"Value": 512\n\t\t\t},\n\t\t\t"Size": {\n\t\t\t\t"Type": "Vector3",\n\t\t\t\t"Value": [2, 0.5, 6]\n\t\t\t},\n\t\t\t"Color": {\n\t\t\t\t"Type": "Color3",\n\t\t\t\t"Value": [1, 0, 0]\n\t\t\t},\n\t\t\t"CFrame": {\n\t\t\t\t"Type": "CFrame", \n\t\t\t\t"Value": [\n\t\t\t\t\t0, 10, 0,\n\t\t\t\t\t1, 0, 0,\n\t\t\t\t\t0, 1, 0,\n\t\t\t\t\t0, 0, 1\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t}\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:"This format has changed in Rojo 7. The same model with Rojo 7's explicit property syntax would look like this:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n\t"name": "cool-skateboard",\n\t"tree": {\n\t\t"$className": "Part",\n\t\t"$properties": {\n\t\t\t"Material": {\n\t\t\t\t"Enum": 512\n\t\t\t},\n\t\t\t"Size": {\n\t\t\t\t"Vector3": [2, 0.5, 6]\n\t\t\t},\n\t\t\t"Color": {\n\t\t\t\t"Color3": [1, 0, 0]\n\t\t\t},\n\t\t\t"CFrame": {\n\t\t\t\t"CFrame": {\n\t\t\t\t\t"position": [0, 10, 0],\n\t\t\t\t\t"orientation": [\n\t\t\t\t\t\t1, 0, 0,\n\t\t\t\t\t\t0, 1, 0,\n\t\t\t\t\t\t0, 0, 1\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n'})}),"\n",(0,o.jsxs)(e.p,{children:["In Rojo 7, the ",(0,o.jsx)(e.code,{children:"Type"})," and ",(0,o.jsx)(e.code,{children:"Value"})," fields were folded together to reduce the amount of typing. Some types like ",(0,o.jsx)(e.code,{children:"CFrame"})," and ",(0,o.jsx)(e.code,{children:"ColorSequence"})," had fields added or renamed."]}),"\n",(0,o.jsxs)(e.p,{children:["Since the release of Rojo 6, it has been feasible to use ",(0,o.jsx)(e.code,{children:"rbxm"})," or ",(0,o.jsx)(e.code,{children:"rbxmx"})," files for models instead of typing properties by hand. For more complicated models, this is recommended."]})]})}function p(t={}){const{wrapper:e}={...(0,r.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},1151:(t,e,n)=>{n.d(e,{Z:()=>a,a:()=>i});var o=n(7294);const r={},s=o.createContext(r);function i(t){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:i(t.components),o.createElement(s.Provider,{value:e},t.children)}}}]);