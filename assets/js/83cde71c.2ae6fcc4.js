"use strict";(self.webpackChunkrojo_space=self.webpackChunkrojo_space||[]).push([[4020],{6690:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var r=s(5893),t=s(1151);const i={sidebar_position:4},o="Project Format",l={id:"project-format",title:"Project Format",description:"Project File",source:"@site/versioned_docs/version-v6/project-format.md",sourceDirName:".",slug:"/project-format",permalink:"/docs/v6/project-format",draft:!1,unlisted:!1,editUrl:"https://github.com/rojo-rbx/rojo.space/edit/master/versioned_docs/version-v6/project-format.md",tags:[],version:"v6",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Porting an Existing Game",permalink:"/docs/v6/getting-started/existing-game"},next:{title:"Sync Details",permalink:"/docs/v6/sync-details"}},c={},a=[{value:"Project File",id:"project-file",level:2},{value:"Instance Description",id:"instance-description",level:2},{value:"Instance Property Value",id:"instance-property-value",level:2},{value:"Example Projects",id:"example-projects",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"project-format",children:"Project Format"}),"\n",(0,r.jsx)(n.h2,{id:"project-file",children:"Project File"}),"\n",(0,r.jsxs)(n.p,{children:["Rojo projects are JSON files that have the ",(0,r.jsx)(n.code,{children:".project.json"})," extension. They have the following fields:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"}),": A string indicating the name of the project. This name is used when building the project into a model or place file.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Required"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tree"}),": An ",(0,r.jsx)(n.a,{href:"#instance-description",children:"Instance Description"})," describing the root instance of the project.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Required"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"servePort"}),": The port that ",(0,r.jsx)(n.code,{children:"rojo serve"})," should listen on. Passing ",(0,r.jsx)(n.code,{children:"--port"})," will override this setting.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Optional"})}),"\n",(0,r.jsxs)(n.li,{children:["Default is ",(0,r.jsx)(n.code,{children:"34872"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"servePlaceIds"}),": A list of place IDs that this project may be live-synced to. This feature can help prevent overwriting the wrong game with source from Rojo.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Optional"})}),"\n",(0,r.jsxs)(n.li,{children:["Default is ",(0,r.jsx)(n.code,{children:"null"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"globIgnorePaths"}),": A list of globs of paths to ignore.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Optional"})}),"\n",(0,r.jsxs)(n.li,{children:["Default is ",(0,r.jsx)(n.code,{children:"[]"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"instance-description",children:"Instance Description"}),"\n",(0,r.jsx)(n.p,{children:"Instance Descriptions correspond one-to-one with the actual Roblox Instances in the project."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"$className"}),": The ClassName of the Instance being described.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Optional if ",(0,r.jsx)(n.code,{children:"$path"})," is specified or if the instance is a Roblox service."]})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"$path"}),": The path on the filesystem to pull files from into the project.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Optional if ",(0,r.jsx)(n.code,{children:"$className"})," is specified."]})}),"\n",(0,r.jsx)(n.li,{children:"Paths are relative to the folder containing the project file."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"$properties"}),": Properties to apply to the instance. Values should be ",(0,r.jsx)(n.a,{href:"#instance-property-value",children:"Instance Property Values"}),".","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Optional"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"$ignoreUnknownInstances"}),": Whether instances that Rojo doesn't know about should be deleted.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Optional"})}),"\n",(0,r.jsxs)(n.li,{children:["Default is ",(0,r.jsx)(n.code,{children:"false"})," if ",(0,r.jsx)(n.code,{children:"$path"})," is specified, otherwise ",(0,r.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"All other fields in an Instance Description are turned into instances whose name is the key. These values should also be Instance Descriptions!"}),"\n",(0,r.jsx)(n.h2,{id:"instance-property-value",children:"Instance Property Value"}),"\n",(0,r.jsxs)(n.p,{children:["There are two kinds of property values on instances, ",(0,r.jsx)(n.strong,{children:"implicit"})," and ",(0,r.jsx)(n.strong,{children:"explicit"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["In the vast majority of cases, you should be able to use ",(0,r.jsx)(n.strong,{children:"implicit"})," property values. To use them, just use a value that's the same shape as the type that the property has:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"MyPart": {\n    "$className": "Part",\n    "$properties": {\n        "Size": [3, 5, 3],\n        "Color": [0.5, 0, 0.5],\n        "Anchored": true,\n        "Material": "Granite"\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Vector3"})," and ",(0,r.jsx)(n.code,{children:"Color3"})," properties can just be arrays of numbers, as can types like ",(0,r.jsx)(n.code,{children:"Vector2"}),", ",(0,r.jsx)(n.code,{children:"CFrame"}),", and more!"]}),"\n",(0,r.jsx)(n.p,{children:"Enums can be set to a string containing the enum variant. Rojo will raise an error if the string isn't a valid variant for the enum."}),"\n",(0,r.jsxs)(n.p,{children:["There are some cases where this syntax for assigning properties ",(0,r.jsx)(n.em,{children:"doesn't"})," work. In these cases, Rojo requires you to use the ",(0,r.jsx)(n.strong,{children:"explicit"})," property syntax."]}),"\n",(0,r.jsxs)(n.p,{children:["Some reasons why you might need to use an ",(0,r.jsx)(n.strong,{children:"explicit"})," property:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Using exotic property types like ",(0,r.jsx)(n.code,{children:"BinaryString"})]}),"\n",(0,r.jsx)(n.li,{children:"Using properties added to Roblox recently that Rojo doesn't know about yet"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The shape of explicit property values is defined by the ",(0,r.jsx)(n.a,{href:"https://github.com/LPGhatguy/rbx-dom",children:"rbx-dom"})," library, so it uses slightly different conventions than the rest of Rojo."]}),"\n",(0,r.jsx)(n.p,{children:"Each value should be an object with the following required fields:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Type"}),": The type of property to represent.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/LPGhatguy/rbx-tree#property-type-coverage",children:"Supported types can be found here"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Value"}),": The value of the property.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The shape of this field depends on which property type is being used. ",(0,r.jsx)(n.code,{children:"Vector3"})," and ",(0,r.jsx)(n.code,{children:"Color3"})," values are both represented as a list of numbers, while ",(0,r.jsx)(n.code,{children:"BinaryString"})," expects a base64-encoded string, for example."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Here's the same object, but with explicit properties:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"MyPart": {\n    "$className": "Part",\n    "$properties": {\n        "Size": {\n            "Type": "Vector3",\n            "Value": [3, 5, 3]\n        },\n        "Color": {\n            "Type": "Color3",\n            "Value": [0.5, 0, 0.5]\n        },\n        "Anchored": {\n            "Type": "Bool",\n            "Value": true\n        },\n        "Material": {\n            "Type": "Enum",\n            "Value": 832\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"example-projects",children:"Example Projects"}),"\n",(0,r.jsxs)(n.p,{children:["This project bundles up everything in the ",(0,r.jsx)(n.code,{children:"src"})," directory. It'd be suitable for making a plugin or model:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "name": "AwesomeLibrary",\n  "tree": {\n    "$path": "src"\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This project describes the layout you might use if you were making the next hit simulator game, ",(0,r.jsx)(n.em,{children:"Sisyphus Simulator"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Sisyphus Simulator",\n  "globIgnorePaths": ["**/*.spec.lua"],\n  "tree": {\n    "$className": "DataModel",\n\n    "HttpService": {\n      "$className": "HttpService",\n      "$properties": {\n        "HttpEnabled": true\n      }\n    },\n\n    "ReplicatedStorage": {\n      "$className": "ReplicatedStorage",\n      "$path": "src/ReplicatedStorage"\n    },\n\n    "StarterPlayer": {\n      "$className": "StarterPlayer",\n\n      "StarterPlayerScripts": {\n        "$className": "StarterPlayerScripts",\n        "$path": "src/StarterPlayerScripts"\n      }\n    },\n\n    "Workspace": {\n      "$className": "Workspace",\n      "$properties": {\n        "Gravity": 67.3\n      },\n\n      "Terrain": {\n        "$path": "Terrain.rbxm"\n      }\n    }\n  }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>o});var r=s(7294);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);